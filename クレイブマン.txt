ゲーム名[クレイブマン]

開発環境		visualstudio --cocos2dx--

対応ハード		PC、android

ジャンル		タイミング式横スクロールアクションゲーム

ゲーム概要
基本的には横スクロールのアクションゲーム
画面のどこかからノーツが流れてくる（どこからどういう風に流すのかは未定）
流れてくるノーツに合わせてアクションを行うことで、より大きなダメージを与えることができたり、
受けるダメージをより減らす（タイミング次第では０ダメにできる）ことができる
ただし、ノーツは任意のタイミングでは流れてこないのでガンガン攻める動き方ではなくノーツが
来るタイミングでうまく攻める動き方をしてもらうような仕様にする
それだけだと、ストレスたまりそうなので敵を倒すことでもらうことのできるポイントを設けて、
一定数溜まるとか
もしくは、マリオのスターみたいなアイテムを用意するとかして
太鼓の達人の難易度鬼レベルでノーツが流れてくるようなボーナスアタックモードを作ってみるか？

目的
タイムアタック、、、ではない
別にスコアを競うわけでもない、、、
でも、ただステージをクリアして次のステージに行くっていうのも味気ない、、、
装備の概念でも追加してみる？
ステージクリア　→　報酬（装備の進呈）　→　次のステージへ？
ただし、装備があれば無双ができるのは何かやだなので武器で与える最大ダメージ数を増やして
最低ダメージ数は固定しておく
ダメージ数の割合	1 	〜　	不定　	〜　	その武器を装備した時の最大ダメージ数の値
ノーツからの距離	遠い　	〜　	近い　	〜　	ジャストタイミング

--------------------------------------------------------------------------------------------------

指摘内容
このゲームに面白みを感じない
音ゲーとしても既存の音ゲー以上の爽快感は得られなさそうだし、アクションゲームとしても実装してある
音ゲー要素が邪魔をしてアクションを楽しめない可能性がある

それだったら、自分の作りたいものを音ゲーなら音ゲー、アクションゲーならアクションゲーとして
シンプルに作り、その中で細かいところにこだわってゲーム性をあげたりゲーム感をあげたりしたほうがいいだろう
細かいところの例::画面のフェードインフェードアウトやキャラクターからフィールドに及ぼす影響をエフェクト化したものなど
プレイヤーが認識できるような丁寧な作業部分に割り振るリソースを増やした方がいいだろう

---------------------------------------------------------------------------------------------------
クレイブマン
当初の予定変更
今回アクションゲームを作る予定
テーマ[貫く]
このテーマに沿ったアクションゲームを作る

貫く　→　武器は槍？
貫く　→　武器はドリル？
貫く　→　敵は死ぬ
貫く　→　敵は刺さる
貫く　→　勢い止まらない
貫く　→　槍　→　槍術　or　棒術？
貫く　→　槍投げる？
貫く　→　地面に刺す

槍のアクション
突く、突進、連続突き、突いた敵を投げる、叩きつける
槍を投げる、壁に刺す、[棒高跳び、棒幅跳び]の要領で移動する

槍を基軸にしたアクロバティックアクション
地面に刺して回転蹴り、地面に刺して大ジャンプ

ただし、アンドロイドゲームでもあるから操作感はシンプルにしたい（というか増やせない）
アンドロイド　既存の操作方法
タップ、ダブルタップ、長押しタップ、スライド、フリップ、ジャイロ利用、
使用操作方法
タップで攻撃
スライドで移動

ジャンプはあえて消すか？
で、フィールドにジャンプさせるオブジェクトを配置するとか？

ゲームの目的
フィールド内の全ての敵を倒す？
より早く目的の位置に到達する？
時間制限以内にゴールを目指す？
より多くの敵を倒す？
ボスを倒す？
アクションゲームなりの爽快感を出したいなら[時間]よりも[倒す]に重点を置く？

---------------------------------------------------------------------------------------------------
ゲーム名[クレイブマン]

開発環境		visualstudio --cocos2dx--

対応ハード		PC、android

ジャンル		横スクロールアクション

ゲーム概要
プレイヤーは、槍一本だけ持って様々なステージを突破していく
槍だけで移動から敵の迎撃まで全部やっていく感じ

目的
プレイヤーは、体力のあるうちにゴールまで到達すること

このゲームの楽しいところ
槍一本で様々なギミックをクリアできるように考えてもらうところ
槍の動きにしなりを追加しようと思うので、それを利用した動きで爽快感を感じれるような
風にする

---------------------------------------------------------------------------------------------------
α版	一通り遊ぶことのできるもの
	ゲームの本域がわかるもの
	実装予定のものを１００％実装しているわけではなく、しかしゲームの概要（本筋）がしっかりわかるようなもの
	例::前十種類のキャラが実装予定ならそのうち、２〜３種類のものは用意されていて遊ぶことができる
	　　キャラ選択画面でいうなら選択するということがわかるものが最低限実装されているなど

β版	全ての機能が実装されているもの（不具合も考慮している）
	ほぼほぼ製品版と遜色がないもの

---------------------------------------------------------------------------------------------------
指摘内容
α版やβ版までの期間を定めないとダラダラ行くだろうからどこまでにα版、β版を作るのかを決めて
それを作るためには何が必要でどういう順番で作業を行わなければいけないのかをはっきりさせて
ガントチャートに反映させる

どこまでがα版、β版として定義されるのかを決めること

---------------------------------------------------------------------------------------------------
α版の定義
簡易のゲーム遷移ができる	○
	・タイトルシーン
	・ステージセレクトシーン
	・メインシーン
	・エンドシーン

ステージを選択することができる
	・全ステージ中最低２ステージが実装	○
		うち、１ステージはチュートリアルもしくは操作方法がわかるようなステージであること
		うち、１ステージはステージギミックが搭載されているもの

ステージ上にアクターに影響を与えるオブジェクトがある
	・全オブジェクト中、最低2種類のオブジェクトが実装　○
		うち、1種類はジャンプに関するオブジェクト（例：トランポリンのようなもの）
		うち、1種類はアウトエリアに関するオブジェクト（例：触れたら一発アウト）
	・考えているステージオブジェクト
		・横方向に飛ばすトランポリンオブジェクト　×
		・横タックルの勢いを軽減される風のようなもの　×

プレイヤーがアクションをすることができる
	・槍のしなりを利用した簡易の横移動	○
	・槍のしなりを利用した簡易の横タックル	×
	・槍のしなりを利用した簡易の縦移動	○
	・槍で敵を倒す				○
	・槍に刺さった敵を投げつける		×
	・槍に刺さった敵を叩きつける		×

プレイヤーに対するカメラの追従			
	・プレイヤーに対して横にスクロール	○
	・プレイヤーに対して縦にスクロール	×

各オペレータに対して、プレイヤーのアクションが適正である
	・タップ、長押し、スライドでプレイヤーが適正のアクションを行う	○
	・各オペレータの制度が正確である	×

槍の挙動に関する実装
	・しなりに応じてプレイヤーの位置が変化する			○
	・ステージオブジェクトのサイドに突くことで刺さることができる	○
	・ステージのトップとボトムに突くことで刺さることができる	○
	・突き刺し動作が180度＋直下にすることができる			○

ステージ上に回復アイテムが存在する		○

ステージ上に敵が存在する
	・全敵中2~3種類の敵が存在する		○
		※敵の種別は[動き方][AI][攻撃パターン]で分けるものとする
		うち、1種類は固定の移動をする
		うち、1種類は攻撃を仕掛けてくる
	・全ての敵が存在する			×
	・敵がプレイヤーを弱追尾するAIがある	○

簡易のUIが存在する				○
	・体力バー
	・オペレータ用のボタン
		アクションボタン2種
		勢い目安用のゲージ		
		スライド用の簡易ボタン1種
	・オプションボタン1種

オプションを開くことができる			○
	開いている間ゲーム時間が止まる		○
	BGMとSEの大きさを変更できる		×
	オペレータの位置を変更できる		×
	ゲームに戻ることができる		○
	ゲームを再スタートすることができる	×
	ステージセレクトに戻ることができる	○

任意のボタンからゲームを終了させることができる	○

BGMが流れている		×
SEが流れている		×
エフェクトが出ている	○


β版の定義
上の項目すべてが実装されている、かつ拡張で増えたものが実装されている、かつ簡易化された部分がないこと